defmodule Pcapex.DumpTest do
  use ExUnit.Case
  alias Pcapex.Dump
  alias Pcapex.Packet

  test "encodes and decodes packets" do
    packet_data =
      "000003040006000000000000000008004500018736d5400040061fe20aa966b40aa966b4d1dc1388a8e7fe14baf73fb480180240e43300000101080a3b00f2673afe931b4d5352502032353130313831316233346134663165393531383234393163653561313639642053454e440d0a546f2d506174683a206d7372703a2f2f31302e3136392e3130322e3138303a353030302f31616665306232376438363834393632386338363236363538643964316434623b7463700d0a46726f6d2d506174683a206d7372703a2f2f31302e3136392e3130322e3138303a392f36383562383065326266326634646539383932313437333937376434633435633b7463700d0a4d6573736167652d49443a2030356535386462373464396134393936393163326631383934303231326538660d0a4661696c7572652d5265706f72743a207965730d0a537563636573732d5265706f72743a206e6f0d0a427974652d52616e67653a20312d302f300d0a2d2d2d2d2d2d2d3235313031383131623334613466316539353138323439316365356131363964240d0a"

    packet = Packet.from_hex(packet_data, DateTime.utc_now() |> DateTime.to_unix(:microsecond))
    dump = Dump.new([packet])

    dump_data = Dump.to_binary(dump)
    assert is_binary(dump_data)
    assert byte_size(dump_data) > 0

    assert Dump.from_binary(dump_data) == dump
  end
end
